apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'jacoco'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"
}

jacoco {
    toolVersion = "0.8.5"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoReport(type: JacocoReport) {
    dependsOn 'test'
    group = "verification"
    description = "Creates Jacoco test coverage reports of unit tests for this subproject."

    def fileFilter = [
        '**/*Test*.*'
    ]

    sourceDirectories.from = files(["src/main/kotlin"])
    additionalSourceDirs.from = files(["src/main/kotlin"])
    classDirectories.from = files([
        fileTree(dir: "${buildDir}/classes", excludes: fileFilter) // Java Debug tree
    ])
    executionData.from = files(
        fileTree(dir: "${buildDir}", includes: [
            "jacoco/*.exec",
            "outputs/code-coverage/connected/*coverage.ec"
        ])
    )

    reports {
        html.enabled = true
        xml.enabled = true
    }

    doLast {
        println "Wrote HTML report to file://${buildDir.path}/reports/jacoco/jacocoReport/html/index.html"
        println "Wrote XML report to file://${buildDir.path}/reports/jacoco/jacocoReport/jacocoReport.xml"
    }
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"